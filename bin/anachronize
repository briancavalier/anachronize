#!/usr/bin/env node

var argv, anachronize, dirs, header, footer, template, fakeRequire, mainTemplate, defineTemplate;

argv = require('optimist')
	.usage('Usage $0 -o output-file [input-files...]')
	.options('o', {
		alias: 'output',
		demand: 'true',
		describe: 'Output js file'
	})
	.options('p', {
		alias: 'package',
		default: './package.json',
		describe: 'Location of package.json file containing a "name" and "main"'
	})
	.options('x', {
		alias: 'exclude',
		describe: 'Exclude a file or files'
	})
	.boolean('s')
	.options('s', {
		alias: 'single-namespace',
		default: false,
		describe: 'Add all modules as properties onto a single top-level main module'
	})
	.argv;

dirs = argv._.length ? argv._ : ['./*.js'];

anachronize = require('../lib/anachronize');
template = require('../lib/template');

fakeRequire = 'function require(id){return id.split(\'./\')[1] == \'{{main}}\' ? root.{{main}} : root[id.replace(\'../\', \'{{namespacePrefix}}\')]; }';
header = ';(function(root,undef){var define;';
footer = '}(this));';

mainTemplate = header + fakeRequire + '{{content}}' + footer;
defineTemplate = 'function(factory){root.{{name}}=factory(require);}';

anachronize({
	excludes: argv.exclude,
	singleNamespace: argv.s,
	package: argv.package,
	output: argv.output,
	template: template.bind(null, mainTemplate),
	defineTemplate: template.bind(null, defineTemplate)
}, dirs).otherwise(function(e) {
	throw e;
});
